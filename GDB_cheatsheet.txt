PTRACE(PTRACE_TRACEME) BYPASS
------------------------------

kali@w4fz5uck5:~$ gdb chall.bin

GNU gdb (Debian 7.12-6+b1) 7.12.0.20161007-git
Copyright (C) 2016 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
<http://www.gnu.org/software/gdb/documentation/>.
For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from chall.bin...(no debugging symbols found)...done.

gdb-peda$ catch syscall ptrace
Catchpoint 1 (syscall 'ptrace' [101])
gdb-peda$ define 1
Type commands for breakpoint(s) 1, one per line.
End with a line saying just "end".
>set $eax=0
>continue 
>end

#restart the program
gdb-peda$ r
Starting program: /root/Desktop/chall.bin 

#then run the program sequence...

gdb-peda$ 1
...snip...

Catchpoint 1 (returned from syscall ptrace), 0xf7ffd059 in __kernel_vsyscall ()
gdb-peda$ 

...snip...

[Inferior 1 (process 6350) exited normally]
Warning: not running or target is remote
gdb-peda$ 
------------------------------------------------------------------------------------------
