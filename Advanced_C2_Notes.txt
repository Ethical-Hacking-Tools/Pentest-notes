Meterpreter Over DNS (DNSKEY and IPV6):
  A lovely hint for you all pentesters, and friends <3.
  
  Download this 4 gits:
    https://github.com/defcon-russia/metasploit-payloads
    https://github.com/defcon-russia/metasploit-framework
    https://github.com/d35ha/CallObfuscator
    https://github.com/TheWover/donut

  Have a look at this BlogPost:
    http://asintsov.blogspot.com/2017/12/data-exfiltration-in-metasploit.html

  Utilizing (donut.exe + CallObfuscator) modify all of your stagers inside meterpreter folder.
    path: metasploit-framework/data/meterpreter/*

  Idea:
    Finally, utilize windows/meterpreter/reverse_dns_tcp payload, which is a meterpreter staged (will download after reverse connection), but works as well in mostly situations! AND Never be caught by IDS/IPS/Firewalls and Blueteam shitty softwares!

  Issues Explanation:
    The normal staged metasploit payload (which has that “sending stage….(xxxx) bytes”), uploads the metsrv.dll (which is super flagged by AVs/IDS/IPS/Firewalls) after stabilizes a normal meterpreter session. The technique trick is to encoding everything and, obfuscate all of metsrv* files. Utilizing this method, it will hardly catches the AV or some kind of protection for all payloads.
    It's important to remind that it doesn’t help you make a super payload 1337 h4x0r obfuscated with veil or another old tools, which from your server-side, you're utilizing in the usual way with all same default metasploit files. So, the exe will run, it will start and perform "winsock.h" meterpreter functions, then it will download metsrv.dll and it will be blocked anyway… 

  references: 
    https://github.com/rapid7/metasploit-framework/wiki/Meterpreter-Stageless-Mode
    
    Considerations:
      Upload
           base32    - from 1 KB/sec to 4 KB/sec
      Downlink
          AAAA       - from 4 KB/sec to 16 KB/sec.  -> @w4fz5uck5 - I NEVER WAS ABLE TO REPLICATE THIS SHIT ON WINDOWS. 
          DNSKEY     - from 86 KB/sec to 660 KB/sec.   -> @w4fz5uck5 - MAYBE WORK FOR YOU

Be Happy!
